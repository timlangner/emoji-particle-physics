{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","console","clear","width","window","innerWidth","height","innerHeight","elButton","document","body","querySelector","elWrapper","getRandomArbitrary","min","max","Math","random","treatmojis","treats","A","PI","frameRate","createTreat","vx","vy","el","createElement","className","inner","innerText","length","floor","appendChild","rect","getBoundingClientRect","lifetime","style","setProperty","treat","absolutePosition","x","left","y","top","position","velocity","mass","radius","offsetWidth","restitution","direction","animating","remove","this","parentNode","removeChild","animate","Fx","abs","Fy","isNaN","ax","ay","checkBounds","update","relX","relY","setTimeout","animationLoop","i","splice","requestAnimationFrame","addEventListener","push","click","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.628a473a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.scss';\n\nfunction App() {\n    console.clear();\n\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    const body = document.body;\n\n    const elButton = document.querySelector(\".treat-button\");\n    const elWrapper = document.querySelector(\".treat-wrapper\");\n\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const treatmojis = [\"🍬\", \"🍫\", \"🍭\", \"🍡\", \"🍩\", \"🍪\", \"🍒\"];\n    const treats = [];\n    const radius = 15;\n\n    const Cd = 0.47; // Dimensionless\n    const rho = 1.22; // kg / m^3\n    const A = Math.PI * radius * radius / 10000; // m^2\n    const ag = 9.81; // m / s^2\n    const frameRate = 1 / 60;\n\n    function createTreat() /* create a treat */ {\n        const vx = getRandomArbitrary(-10, 10); // x velocity\n        const vy = getRandomArbitrary(-10, 1);  // y velocity\n\n        const el = document.createElement(\"div\");\n        el.className = \"treat\";\n\n        const inner = document.createElement(\"span\");\n        inner.className = \"inner\";\n        inner.innerText = treatmojis[getRandomInt(0, treatmojis.length - 1)];\n        el.appendChild(inner);\n\n        elWrapper.appendChild(el);\n\n        const rect = el.getBoundingClientRect();\n\n        const lifetime = getRandomArbitrary(2000, 3000);\n\n        el.style.setProperty(\"--lifetime\", lifetime);\n\n        const treat = {\n            el,\n            absolutePosition: { x: rect.left, y: rect.top },\n            position: { x: rect.left, y: rect.top },\n            velocity: { x: vx, y: vy },\n            mass: 0.1, //kg\n            radius: el.offsetWidth, // 1px = 1cm\n            restitution: -.7,\n\n            lifetime,\n            direction: vx > 0 ? 1 : -1,\n\n            animating: true,\n\n            remove() {\n                this.animating = false;\n                this.el.parentNode.removeChild(this.el);\n            },\n\n            animate() {\n                const treat = this;\n                let Fx =\n                    -0.5 *\n                    Cd *\n                    A *\n                    rho *\n                    treat.velocity.x *\n                    treat.velocity.x *\n                    treat.velocity.x /\n                    Math.abs(treat.velocity.x);\n                let Fy =\n                    -0.5 *\n                    Cd *\n                    A *\n                    rho *\n                    treat.velocity.y *\n                    treat.velocity.y *\n                    treat.velocity.y /\n                    Math.abs(treat.velocity.y);\n\n                Fx = isNaN(Fx) ? 0 : Fx;\n                Fy = isNaN(Fy) ? 0 : Fy;\n\n                // Calculate acceleration ( F = ma )\n                var ax = Fx / treat.mass;\n                var ay = ag + Fy / treat.mass;\n                // Integrate to get velocity\n                treat.velocity.x += ax * frameRate;\n                treat.velocity.y += ay * frameRate;\n\n                // Integrate to get position\n                treat.position.x += treat.velocity.x * frameRate * 100;\n                treat.position.y += treat.velocity.y * frameRate * 100;\n\n                treat.checkBounds();\n                treat.update();\n            },\n\n            checkBounds() {\n\n                if (treat.position.y > height - treat.radius) {\n                    treat.velocity.y *= treat.restitution;\n                    treat.position.y = height - treat.radius;\n                }\n                if (treat.position.x > width - treat.radius) {\n                    treat.velocity.x *= treat.restitution;\n                    treat.position.x = width - treat.radius;\n                    treat.direction = -1;\n                }\n                if (treat.position.x < treat.radius) {\n                    treat.velocity.x *= treat.restitution;\n                    treat.position.x = treat.radius;\n                    treat.direction = 1;\n                }\n\n            },\n\n            update() {\n                const relX = this.position.x - this.absolutePosition.x;\n                const relY = this.position.y - this.absolutePosition.y;\n\n                this.el.style.setProperty(\"--x\", relX);\n                this.el.style.setProperty(\"--y\", relY);\n                this.el.style.setProperty(\"--direction\", this.direction);\n            }\n        };\n\n        setTimeout(() => {\n            treat.remove();\n        }, lifetime);\n\n        return treat;\n    }\n\n\n    function animationLoop() {\n        var i = treats.length;\n        while (i--) {\n            treats[i].animate();\n\n            if (!treats[i].animating) {\n                treats.splice(i, 1);\n            }\n        }\n\n        requestAnimationFrame(animationLoop);\n    }\n\n    animationLoop();\n\n    function addTreats() {\n        //cancelAnimationFrame(frame);\n        if (treats.length > 40) {\n            return;\n        }\n        for (let i = 0; i < 10; i++) {\n            treats.push(createTreat());\n        }\n    }\n\n    elButton.addEventListener(\"click\", addTreats);\n    elButton.click();\n\n    window.addEventListener(\"resize\", () => {\n        width = window.innerWidth;\n        height = window.innerHeight;\n    });\n\n    return (\n    <div className=\"treat-wrapper\">\n        <button className=\"treat-button\">\n            Click me!\n        </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}